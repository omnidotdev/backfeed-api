// @ts-nocheck

import { builder } from "graphql/schema";
import { Prisma } from '.prisma/client';
export {
  UserObject,
  UserIdFieldObject,
  UserCreatedAtFieldObject,
  UserUpdatedAtFieldObject,
  UserWalletAddressFieldObject,
  UserUpvoteFieldObject,
  UserPostFieldObject,
  createManyUserMutation,
  createOneUserMutation,
  deleteManyUserMutation,
  deleteOneUserMutation,
  updateManyUserMutation,
  updateOneUserMutation,
  upsertOneUserMutation,
  createManyUserMutationObject,
  createOneUserMutationObject,
  deleteManyUserMutationObject,
  deleteOneUserMutationObject,
  updateManyUserMutationObject,
  updateOneUserMutationObject,
  upsertOneUserMutationObject,
  findFirstUserQuery,
  findManyUserQuery,
  countUserQuery,
  findUniqueUserQuery,
  findFirstUserQueryObject,
  findManyUserQueryObject,
  countUserQueryObject,
  findUniqueUserQueryObject
} from './User';
export {
  OrganizationObject,
  OrganizationIdFieldObject,
  OrganizationCreatedAtFieldObject,
  OrganizationUpdatedAtFieldObject,
  OrganizationNameFieldObject,
  OrganizationSlugFieldObject,
  OrganizationProjectsFieldObject,
  createManyOrganizationMutation,
  createOneOrganizationMutation,
  deleteManyOrganizationMutation,
  deleteOneOrganizationMutation,
  updateManyOrganizationMutation,
  updateOneOrganizationMutation,
  upsertOneOrganizationMutation,
  createManyOrganizationMutationObject,
  createOneOrganizationMutationObject,
  deleteManyOrganizationMutationObject,
  deleteOneOrganizationMutationObject,
  updateManyOrganizationMutationObject,
  updateOneOrganizationMutationObject,
  upsertOneOrganizationMutationObject,
  findFirstOrganizationQuery,
  findManyOrganizationQuery,
  countOrganizationQuery,
  findUniqueOrganizationQuery,
  findFirstOrganizationQueryObject,
  findManyOrganizationQueryObject,
  countOrganizationQueryObject,
  findUniqueOrganizationQueryObject
} from './Organization';
export {
  ProjectObject,
  ProjectIdFieldObject,
  ProjectCreatedAtFieldObject,
  ProjectUpdatedAtFieldObject,
  ProjectNameFieldObject,
  ProjectSlugFieldObject,
  ProjectImageFieldObject,
  ProjectDescriptionFieldObject,
  ProjectOrganizationFieldObject,
  ProjectOrganizationIdFieldObject,
  ProjectPostsFieldObject,
  createManyProjectMutation,
  createOneProjectMutation,
  deleteManyProjectMutation,
  deleteOneProjectMutation,
  updateManyProjectMutation,
  updateOneProjectMutation,
  upsertOneProjectMutation,
  createManyProjectMutationObject,
  createOneProjectMutationObject,
  deleteManyProjectMutationObject,
  deleteOneProjectMutationObject,
  updateManyProjectMutationObject,
  updateOneProjectMutationObject,
  upsertOneProjectMutationObject,
  findFirstProjectQuery,
  findManyProjectQuery,
  countProjectQuery,
  findUniqueProjectQuery,
  findFirstProjectQueryObject,
  findManyProjectQueryObject,
  countProjectQueryObject,
  findUniqueProjectQueryObject
} from './Project';
export {
  PostObject,
  PostIdFieldObject,
  PostCreatedAtFieldObject,
  PostUpdatedAtFieldObject,
  PostTitleFieldObject,
  PostDescriptionFieldObject,
  PostAuthorIdFieldObject,
  PostAuthorFieldObject,
  PostProjectIdFieldObject,
  PostProjectFieldObject,
  PostUpvotesFieldObject,
  createManyPostMutation,
  createOnePostMutation,
  deleteManyPostMutation,
  deleteOnePostMutation,
  updateManyPostMutation,
  updateOnePostMutation,
  upsertOnePostMutation,
  createManyPostMutationObject,
  createOnePostMutationObject,
  deleteManyPostMutationObject,
  deleteOnePostMutationObject,
  updateManyPostMutationObject,
  updateOnePostMutationObject,
  upsertOnePostMutationObject,
  findFirstPostQuery,
  findManyPostQuery,
  countPostQuery,
  findUniquePostQuery,
  findFirstPostQueryObject,
  findManyPostQueryObject,
  countPostQueryObject,
  findUniquePostQueryObject
} from './Post';
export {
  UpvoteObject,
  UpvoteIdFieldObject,
  UpvoteCreatedAtFieldObject,
  UpvoteUpdatedAtFieldObject,
  UpvotePostIdFieldObject,
  UpvotePostFieldObject,
  UpvoteUserIdFieldObject,
  UpvoteUserFieldObject,
  createManyUpvoteMutation,
  createOneUpvoteMutation,
  deleteManyUpvoteMutation,
  deleteOneUpvoteMutation,
  updateManyUpvoteMutation,
  updateOneUpvoteMutation,
  upsertOneUpvoteMutation,
  createManyUpvoteMutationObject,
  createOneUpvoteMutationObject,
  deleteManyUpvoteMutationObject,
  deleteOneUpvoteMutationObject,
  updateManyUpvoteMutationObject,
  updateOneUpvoteMutationObject,
  upsertOneUpvoteMutationObject,
  findFirstUpvoteQuery,
  findManyUpvoteQuery,
  countUpvoteQuery,
  findUniqueUpvoteQuery,
  findFirstUpvoteQueryObject,
  findManyUpvoteQueryObject,
  countUpvoteQueryObject,
  findUniqueUpvoteQueryObject
} from './Upvote';

export const BatchPayload = builder.objectType(builder.objectRef<Prisma.BatchPayload>('BatchPayload'), {
  description: 'Batch payloads from prisma.',
  fields: (t) => ({
    count: t.exposeInt('count', { description: 'Prisma Batch Payload', nullable: false }),
  }),
});

export const modelNames = [
  'User',
  'Organization',
  'Project',
  'Post',
  'Upvote',
] as const;

export type Model = typeof modelNames[number];
